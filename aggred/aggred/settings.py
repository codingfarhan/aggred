"""
Django settings for aggred project.

Generated by 'django-admin startproject' using Django 3.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

from urllib.parse import urlparse
import redis 



redis_url = os.environ.get('REDIS_URL')
redis_store = redis.from_url(redis_url, ssl_cert_reqs=None)

print(redis_store)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ak8hr0@z4jns6q+=6f_6p5zj388nx4$si9!b6*e-fzcs^b+id1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['aggred.herokuapp.com', 'localhost', 'aggred.com', '127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'forum.apps.ForumConfig',
    'profiles.apps.ProfilesConfig',
    'leaderboards.apps.LeaderboardsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # ... include the providers you want to enable:
    'allauth.socialaccount.providers.google',

    'channels'
]


SITE_ID = 1

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'


# ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_REQUIRED = False

ACCOUNT_DEFAULT_HTTP_PROTOCOL='https'




ACCOUNT_USER_MODEL_USERNAME_FIELD = None

SOCIALACCOUNT_QUERY_EMAIL = True

SOCIALACCOUNT_PROVIDERS = {
    'google': {

        'APP': {
            'client_id': '1068772275258-4gh7fogl9n7mn6tj4amkh1kmnqhpioud.apps.googleusercontent.com',
            'secret': 'zLgpJ_tuQtSa8hL-Hv8QwWls',
            'key': '',
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}


AUTH_USER_MODEL = 'profiles.profile'


AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.AllowAllUsersModelBackend',
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'aggred.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'aggred.wsgi.application'
ASGI_APPLICATION = 'aggred.asgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases


DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'df52bj7ft9f47t',
        'USER': 'haazktmklxjdnm',
        # 'PASSWORD': '123456',
        'PASSWORD': 'c29361abc4891e0c04ae5e9b64ac0259cb0dd5285ba170333c7b9cefe2b86c4a',
        # 'HOST': '65.0.172.102',
        # 'HOST': 'localhost',
        'HOST': 'ec2-3-226-134-153.compute-1.amazonaws.com',
        'PORT': '5432'
    }
}


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # "hosts": [redis_url],
            "hosts": ['redis://127.0.0.1:6379'],
        },
    },
}
print(os.environ.get('REDIS_URL'))

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        # "LOCATION": redis_url,
        "LOCATION": 'redis://127.0.0.1:6379',
        # "LOCATION": '%s:%s' % (redis_url.hostname, redis_url.port),
        # "OPTIONS": {
        #     # "PASSWORD": redis_url.password,
        #     # 'DB':0,
        #     "CLIENT_CLASS": "django_redis.client.DefaultClient",
        #     "CONNECTION_POOL_KWARGS": {
        #         "ssl_cert_reqs": None
        #     },
        # }
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# EMAIL SETTINGS 


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'aggredofficial@gmail.com'
EMAIL_HOST_PASSWORD = 'rkcrcvyxpveeyuqa'

# windows: 'cemdzwvzlxofsbnt'
# custom app: 'rkcrcvyxpveeyuqa'

DEFAULT_FROM_EMAIL = 'aggredofficial@gmail.com'



# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# email sending details


# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_USE_TLS = True
# EMAIL_PORT = 587
# EMAIL_HOST_USER = 'aggredofficial@gmail.com'
# EMAIL_HOST_PASSWORD = 'kytchwskiegsycmj'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



# AWS CREDENTIALS

AWS_ACCESS_KEY_ID = 'AKIA2R5CRTRWPRDEFFGH'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'aggred-pictures'
# AWS_S3_CUSTOM_DOMAIN = AMAZON_CREDENTIAL['']
# AWS_S3_FILE_OVERWRITE = True
# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'